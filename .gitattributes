xu@ubuntu20:~/stealthdb$ sudo -i -u postgres
postgres@ubuntu20:~$ psql
psql (9.6.24)
输入 "help" 来获取帮助信息.

postgres=# CREATE EXTENSION encdb;
错误:  库 "/usr/lib/postgresql/9.6/lib/encdb.so"不兼容:版本不匹配
描述:  服务器版本是9.6，库的版本是10.0.



在 Ubuntu 20.04 上安装 PostgreSQL 9.6 的步骤如下：

更新软件包列表：

在终端中执行以下命令，以确保您的系统已更新到最新的软件包列表：

bash
Copy code
sudo apt update
安装 PostgreSQL 9.6：

Ubuntu 20.04 的默认软件源中可能不包含 PostgreSQL 9.6，但您可以使用 PostgreSQL 官方仓库获取它。以下是安装步骤：

添加 PostgreSQL 官方仓库的 APT 密钥：

bash
Copy code
sudo apt install wget ca-certificates
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
添加 PostgreSQL 9.6 仓库到软件源列表：

bash
Copy code
echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
更新软件包列表：

bash
Copy code
sudo apt update
安装 PostgreSQL 9.6：

bash
Copy code
sudo apt install postgresql-9.6
初始化数据库并启动 PostgreSQL：

安装完成后，初始化 PostgreSQL 数据库并启动服务：

bash
Copy code
sudo pg_createcluster 9.6 main --start
这将创建并启动一个名为 "main" 的 PostgreSQL 集群。

设置密码：

默认情况下，PostgreSQL 安装后仅允许本地连接。您需要设置密码来访问数据库。

切换到 PostgreSQL 用户：

bash
Copy code
sudo -i -u postgres
使用 psql 命令登录 PostgreSQL：

bash
Copy code
psql
设置 postgres 用户密码：

sql
Copy code
ALTER USER postgres WITH PASSWORD 'your_password';
退出 psql：

sql
Copy code
\q
退出 PostgreSQL 用户：

bash
Copy code
exit
配置远程访问（可选）：

如果您需要从远程计算机访问 PostgreSQL 服务器，请进行以下配置：

编辑 PostgreSQL 配置文件：

bash
Copy code
sudo nano /etc/postgresql/9.6/main/pg_hba.conf
在文件的底部添加以下行，以允许所有 IP 地址连接到数据库。请根据您的安全需求调整。

plaintext
Copy code
host    all    all    0.0.0.0/0    md5
保存并退出文件。

重启 PostgreSQL 服务：

bash
Copy code
sudo service postgresql restart







在Ubuntu 20.04上安装PostgreSQL 9.6需要执行一系列的步骤，因为默认的Ubuntu 20.04的存储库可能不包含PostgreSQL 9.6版本。以下是安装步骤：

添加PostgreSQL存储库:
首先，你需要添加PostgreSQL官方存储库，因为Ubuntu 20.04默认存储库可能不提供9.6版本。

bash
Copy code
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
更新系统包列表:
执行更新以使新添加的存储库生效。

bash
Copy code
sudo apt update
安装PostgreSQL 9.6:
安装PostgreSQL 9.6版本。

bash
Copy code
sudo apt install postgresql-9.6
启动PostgreSQL服务:
PostgreSQL安装后，它应该会自动启动。你可以使用以下命令检查其状态或手动启动它。

bash
Copy code
sudo systemctl status postgresql.service  # 检查状态
sudo systemctl start postgresql.service   # 启动服务
切换到Postgres用户:
默认情况下，PostgreSQL创建一个名为postgres的用户。你需要切换到这个用户来进行操作。

bash
Copy code
sudo -i -u postgres
创建一个新的数据库用户和数据库（可选）:
你可以创建一个新的数据库用户和数据库。

bash
Copy code
createuser --interactive
createdb mydatabase
连接到PostgreSQL数据库（可选）:
使用以下命令连接到PostgreSQL。

bash
Copy code
psql



























xu@ubuntu20:~/桌面$ sudo apt-get --purge remove postgresql postgresql-server-dev-all
正在读取软件包列表... 完成
正在分析软件包的依赖关系树       
正在读取状态信息... 完成       
下列软件包是自动安装的并且现在不需要了：
  chromium-codecs-ffmpeg-extra gstreamer1.0-vaapi
  libgstreamer-plugins-bad1.0-0 libva-wayland2
使用'sudo apt autoremove'来卸载它(它们)。
下列软件包将被【卸载】：
  postgresql* postgresql-server-dev-all*
升级了 0 个软件包，新安装了 0 个软件包，要卸载 2 个软件包，有 252 个软件包未被升级。
解压缩后将会空出 165 kB 的空间。
您希望继续执行吗？ [Y/n] Y
(正在读取数据库 ... 系统当前共安装有 220573 个文件和目录。)
正在卸载 postgresql (12+214ubuntu0.1) ...
正在卸载 postgresql-server-dev-all (214ubuntu0.1) ...
正在处理用于 man-db (2.9.1-1) 的触发器 ...
xu@ubuntu20:~/桌面$ sudo apt-get autoremove
正在读取软件包列表... 完成
正在分析软件包的依赖关系树       
正在读取状态信息... 完成       
下列软件包将被【卸载】：
  chromium-codecs-ffmpeg-extra gstreamer1.0-vaapi
  libgstreamer-plugins-bad1.0-0 libva-wayland2
升级了 0 个软件包，新安装了 0 个软件包，要卸载 4 个软件包，有 252 个软件包未被升级。
解压缩后将会空出 2,255 kB 的空间。
您希望继续执行吗？ [Y/n] Y
(正在读取数据库 ... 系统当前共安装有 220548 个文件和目录。)
正在卸载 chromium-codecs-ffmpeg-extra (1:85.0.4183.83-0ubuntu0.20.04.3) ...
正在卸载 gstreamer1.0-vaapi:amd64 (1.16.2-2) ...
正在卸载 libgstreamer-plugins-bad1.0-0:amd64 (1.16.3-0ubuntu1.1) ...
正在卸载 libva-wayland2:amd64 (2.7.0-2) ...
正在处理用于 libc-bin (2.31-0ubuntu9.9) 的触发器 ...
xu@ubuntu20:~/桌面$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
OK
xu@ubuntu20:~/桌面$ sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
xu@ubuntu20:~/桌面$ sudo apt-get update
命中:2 http://security.ubuntu.com/ubuntu focal-security InRelease              
命中:1 http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal InRelease              
命中:3 http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-updates InRelease
命中:4 http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-backports InRelease
命中:5 https://download.01.org/intel-sgx/sgx_repo/ubuntu focal InRelease
获取:6 http://apt.postgresql.org/pub/repos/apt focal-pgdg InRelease [123 kB]
获取:7 http://apt.postgresql.org/pub/repos/apt focal-pgdg/main amd64 Packages [293 kB]
已下载 416 kB，耗时 4秒 (114 kB/s)
正在读取软件包列表... 完成
N: 鉴于仓库 'http://apt.postgresql.org/pub/repos/apt focal-pgdg InRelease' 不支持 'i386' 体系结构，跳过配置文件 'main/binary-i386/Packages' 的获取。
xu@ubuntu20:~/桌面$ sudo apt-get install postgresql-9.6 postgresql-server-dev-9.6
正在读取软件包列表... 完成
正在分析软件包的依赖关系树       
正在读取状态信息... 完成       
将会同时安装下列软件：
  postgresql-client-9.6 postgresql-contrib-9.6
建议安装：
  postgresql-doc-9.6 libdbd-pg-perl
下列【新】软件包将被安装：
  postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6
  postgresql-server-dev-9.6
升级了 0 个软件包，新安装了 4 个软件包，要卸载 0 个软件包，有 260 个软件包未被升级。
需要下载 6,994 kB 的归档。
解压缩后会消耗 35.3 MB 的额外空间。
您希望继续执行吗？ [Y/n] Y
获取:1 http://apt.postgresql.org/pub/repos/apt focal-pgdg/main amd64 postgresql-client-9.6 amd64 9.6.24-5.pgdg20.04+1 [1,357 kB]
获取:2 http://apt.postgresql.org/pub/repos/apt focal-pgdg/main amd64 postgresql-9.6 amd64 9.6.24-5.pgdg20.04+1 [4,339 kB]
获取:3 http://apt.postgresql.org/pub/repos/apt focal-pgdg/main amd64 postgresql-contrib-9.6 amd64 9.6.24-5.pgdg20.04+1 [510 kB]
获取:4 http://apt.postgresql.org/pub/repos/apt focal-pgdg/main amd64 postgresql-server-dev-9.6 amd64 9.6.24-5.pgdg20.04+1 [788 kB]
已下载 6,994 kB，耗时 11秒 (662 kB/s)                                          
正在预设定软件包 ...
正在选中未选择的软件包 postgresql-client-9.6。
(正在读取数据库 ... 系统当前共安装有 220507 个文件和目录。)
准备解压 .../postgresql-client-9.6_9.6.24-5.pgdg20.04+1_amd64.deb  ...
正在解压 postgresql-client-9.6 (9.6.24-5.pgdg20.04+1) ...
正在选中未选择的软件包 postgresql-9.6。
准备解压 .../postgresql-9.6_9.6.24-5.pgdg20.04+1_amd64.deb  ...
正在解压 postgresql-9.6 (9.6.24-5.pgdg20.04+1) ...
正在选中未选择的软件包 postgresql-contrib-9.6。
准备解压 .../postgresql-contrib-9.6_9.6.24-5.pgdg20.04+1_amd64.deb  ...
正在解压 postgresql-contrib-9.6 (9.6.24-5.pgdg20.04+1) ...
正在选中未选择的软件包 postgresql-server-dev-9.6。
准备解压 .../postgresql-server-dev-9.6_9.6.24-5.pgdg20.04+1_amd64.deb  ...
正在解压 postgresql-server-dev-9.6 (9.6.24-5.pgdg20.04+1) ...
正在设置 postgresql-client-9.6 (9.6.24-5.pgdg20.04+1) ...
正在设置 postgresql-server-dev-9.6 (9.6.24-5.pgdg20.04+1) ...
正在设置 postgresql-9.6 (9.6.24-5.pgdg20.04+1) ...
Creating new PostgreSQL cluster 9.6/main ...
/usr/lib/postgresql/9.6/bin/initdb -D /var/lib/postgresql/9.6/main --auth-local peer --auth-host md5
属于此数据库系统的文件宿主为用户 "postgres".
此用户也必须为服务器进程的宿主.
数据库簇将使用本地化语言 "zh_CN.UTF-8"进行初始化.
默认的数据库编码已经相应的设置为 "UTF8".
initdb: 无法为本地化语言环境"zh_CN.UTF-8"找到合适的文本搜索配置
缺省的文本搜索配置将会被设置到"simple"

禁止为数据页生成校验和.

修复已存在目录 /var/lib/postgresql/9.6/main 的权限 ... 成功
正在创建子目录 ... 成功
选择默认最大联接数 (max_connections) ... 100
选择默认共享缓冲区大小 (shared_buffers) ... 128MB
selecting default timezone ... Asia/Shanghai
选择动态共享内存实现 ......posix
创建配置文件 ... 成功
正在运行自举脚本 ...成功
正在执行自举后初始化 ...成功
同步数据到磁盘...成功

成功。您现在可以用下面的命令开启数据库服务器：

    /usr/lib/postgresql/9.6/bin/pg_ctl -D /var/lib/postgresql/9.6/main -l logfile start

Ver Cluster Port Status Owner    Data directory               Log file
9.6 main    5433 down   postgres /var/lib/postgresql/9.6/main /var/log/postgresql/postgresql-9.6-main.log
正在设置 postgresql-contrib-9.6 (9.6.24-5.pgdg20.04+1) ...
正在处理用于 postgresql-common (214ubuntu0.1) 的触发器 ...
Building PostgreSQL dictionaries from installed myspell/hunspell packages...
  en_us
Removing obsolete dictionary files:
xu@ubuntu20:~/桌面$ sudo systemctl start postgresql
xu@ubuntu20:~/桌面$ psql --version
psql (PostgreSQL) 12.17 (Ubuntu 12.17-0ubuntu0.20.04.1)






postgres=# CREATE EXTENSION encdb;
错误:  无法打开扩展控制文件 "/usr/share/postgresql/9.6/extension/encdb.control": 没有那个文件或目录
postgres=# 



xu@ubuntu20:~/桌面$ psql --version
psql (PostgreSQL) 12.17 (Ubuntu 12.17-0ubuntu0.20.04.1)
xu@ubuntu20:~/桌面$ sudo apt-get --purge remove postgresql-12 postgresql-server-dev-12
正在读取软件包列表... 完成
正在分析软件包的依赖关系树       
正在读取状态信息... 完成       
下列软件包将被【卸载】：
  postgresql-12* postgresql-server-dev-12*
升级了 0 个软件包，新安装了 0 个软件包，要卸载 2 个软件包，有 258 个软件包未被升级。
解压缩后将会空出 46.9 MB 的空间。
您希望继续执行吗？ [Y/n] Y
(正在读取数据库 ... 系统当前共安装有 221926 个文件和目录。)
正在卸载 postgresql-12 (12.17-0ubuntu0.20.04.1) ...
update-alternatives: 使用 /usr/share/postgresql/9.6/man/man1/postmaster.1.gz 来在自动模式中提供 /usr/share/man/man1/postmaster.1.gz (postmaster.1.gz)
正在卸载 postgresql-server-dev-12 (12.17-0ubuntu0.20.04.1) ...
正在处理用于 postgresql-common (214ubuntu0.1) 的触发器 ...
Building PostgreSQL dictionaries from installed myspell/hunspell packages...
  en_us
Removing obsolete dictionary files:
(正在读取数据库 ... 系统当前共安装有 219733 个文件和目录。)
正在清除 postgresql-12 (12.17-0ubuntu0.20.04.1) 的配置文件 ...
Dropping cluster main...
dpkg: 警告: 卸载 postgresql-12 时，目录 /usr/share/postgresql/12/extension 非空，因而不会删除该目录
正在处理用于 postgresql-common (214ubuntu0.1) 的触发器 ...
Building PostgreSQL dictionaries from installed myspell/hunspell packages...
  en_us
Removing obsolete dictionary files:
xu@ubuntu20:~/桌面$ psql --version
psql (PostgreSQL) 12.17 (Ubuntu 12.17-0ubuntu0.20.04.1)
xu@ubuntu20:~/桌面$ sudo -u postgres psql
psql (12.17 (Ubuntu 12.17-0ubuntu0.20.04.1), server 9.6.24)
Type "help" for help.

postgres=# CREATE EXTENSION encdb;
错误:  无法打开扩展控制文件 "/usr/share/postgresql/9.6/extension/encdb.control": 没有那个文件或目录
postgres=# 



要在 Ubuntu 上卸载已安装的 PostgreSQL 12 并安装 PostgreSQL 9.6，您可以按照以下步骤操作：

卸载 PostgreSQL 12
停止 PostgreSQL 服务：

bash
Copy code
sudo systemctl stop postgresql
卸载 PostgreSQL 12：

bash
Copy code
sudo apt-get --purge remove postgresql postgresql-server-dev-all
这将移除 PostgreSQL 12 和相关的开发文件。请注意，使用 --purge 参数会删除配置文件和数据目录。

清理系统：

bash
Copy code
sudo apt-get autoremove
这将删除所有不再需要的包。

可选：备份数据：
如果您有重要数据在 PostgreSQL 12 的数据库中，建议在卸载前进行备份。

安装 PostgreSQL 9.6
添加 PostgreSQL 9.6 的官方仓库：
PostgreSQL 9.6 可能不在 Ubuntu 的默认仓库中，因此您需要添加 PostgreSQL 的官方仓库。

添加 GPG 密钥：

bash
Copy code
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
添加仓库：

bash
Copy code
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
更新包列表：

bash
Copy code
sudo apt-get update
安装 PostgreSQL 9.6：

bash
Copy code
sudo apt-get install postgresql-9.6 postgresql-server-dev-9.6
这将安装 PostgreSQL 9.6 及其开发文件。

启动 PostgreSQL 服务：

bash
Copy code
sudo systemctl start postgresql
验证安装：
检查 PostgreSQL 9.6 是否正确安装：

bash
Copy code
psql --version
或者尝试连接到 PostgreSQL 数据库：

bash
Copy code
sudo -u postgres psql















# Auto detect text files and perform LF normalization
* text=auto
postgres=# CREATE EXTENSION encdb;
ERROR:  could not load library "/usr/lib/postgresql/12/lib/encdb.so": /usr/lib/postgresql/12/lib/encdb.so: undefined symbol: get_float4_infinity




xu@ubuntu20:/opt/intel/sgxsdk/SampleCode/SampleEnclave$ sudo make
[sudo] xu 的密码： 
对不起，请重试。
[sudo] xu 的密码： 
make[1]: 进入目录“/opt/intel/sgxsdk/SampleCode/SampleEnclave”
GEN  =>  App/Enclave_u.h
CC   <=  App/Enclave_u.c
CXX  <=  App/App.cpp
CXX  <=  App/Edger8rSyntax/Types.cpp
CXX  <=  App/Edger8rSyntax/Pointers.cpp
CXX  <=  App/Edger8rSyntax/Arrays.cpp
CXX  <=  App/Edger8rSyntax/Functions.cpp
CXX  <=  App/TrustedLibrary/Thread.cpp
CXX  <=  App/TrustedLibrary/Libcxx.cpp
CXX  <=  App/TrustedLibrary/Libc.cpp
LINK =>  app
GEN  =>  Enclave/Enclave_t.h
CC   <=  Enclave/Enclave_t.c
CXX  <=  Enclave/Edger8rSyntax/Arrays.cpp
CXX  <=  Enclave/Edger8rSyntax/Functions.cpp
CXX  <=  Enclave/Edger8rSyntax/Pointers.cpp
CXX  <=  Enclave/Edger8rSyntax/Types.cpp
CXX  <=  Enclave/Enclave.cpp
CXX  <=  Enclave/TrustedLibrary/Libc.cpp
In file included from /opt/intel/sgxsdk/include/libcxx/cwchar:110,
                 from /opt/intel/sgxsdk/include/libcxx/__string:60,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/libcxx/__support/sgx/support.h:6:8: warning: redundant redeclaration of ‘size_t mbsnrtowcs(wchar_t*, const char**, size_t, size_t, mbstate_t*)’ in same scope [-Wredundant-decls]
    6 | size_t mbsnrtowcs(wchar_t *dst, const char **src,
      |        ^~~~~~~~~~
In file included from /opt/intel/sgxsdk/include/libcxx/iosfwd:95,
                 from /opt/intel/sgxsdk/include/libcxx/__debug:17,
                 from /opt/intel/sgxsdk/include/libcxx/utility:206,
                 from /opt/intel/sgxsdk/include/libcxx/algorithm:652,
                 from /opt/intel/sgxsdk/include/libcxx/__string:57,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/tlibc/wchar.h:132:27: note: previous declaration of ‘size_t mbsnrtowcs(wchar_t*, const char**, size_t, size_t, mbstate_t*)’
  132 | size_t      _TLIBC_CDECL_ mbsnrtowcs(wchar_t *__restrict, const char **__restrict, size_t, size_t, mbstate_t *__restrict);
      |                           ^~~~~~~~~~
In file included from /opt/intel/sgxsdk/include/libcxx/cwchar:110,
                 from /opt/intel/sgxsdk/include/libcxx/__string:60,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/libcxx/__support/sgx/support.h:8:8: warning: redundant redeclaration of ‘size_t wcsnrtombs(char*, const wchar_t**, size_t, size_t, mbstate_t*)’ in same scope [-Wredundant-decls]
    8 | size_t wcsnrtombs(char *dst, const wchar_t **src,
      |        ^~~~~~~~~~
In file included from /opt/intel/sgxsdk/include/libcxx/iosfwd:95,
                 from /opt/intel/sgxsdk/include/libcxx/__debug:17,
                 from /opt/intel/sgxsdk/include/libcxx/utility:206,
                 from /opt/intel/sgxsdk/include/libcxx/algorithm:652,
                 from /opt/intel/sgxsdk/include/libcxx/__string:57,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/tlibc/wchar.h:131:27: note: previous declaration of ‘size_t wcsnrtombs(char*, const wchar_t**, size_t, size_t, mbstate_t*)’
  131 | size_t      _TLIBC_CDECL_ wcsnrtombs(char *__restrict, const wchar_t **__restrict, size_t, size_t, mbstate_t *__restrict);
      |                           ^~~~~~~~~~
CXX  <=  Enclave/TrustedLibrary/Libcxx.cpp
CXX  <=  Enclave/TrustedLibrary/Thread.cpp
LINK =>  enclave.so
There is no enclave test key<Enclave_private_test.pem>.
The project will generate a key<Enclave_private_test.pem> for test.
Generating RSA private key, 3072 bit long modulus (2 primes)
..........++++
....................................................................................................................................................................++++
e is 3 (0x03)
<EnclaveConfiguration>
    <ProdID>0</ProdID>
    <ISVSVN>0</ISVSVN>
    <StackMaxSize>0x40000</StackMaxSize>
    <HeapMaxSize>0x100000</HeapMaxSize>
    <TCSNum>10</TCSNum>
    <TCSPolicy>1</TCSPolicy>
    <!-- Recommend changing 'DisableDebug' to 1 to make the enclave undebuggable for enclave release -->
    <DisableDebug>0</DisableDebug>
    <MiscSelect>0</MiscSelect>
    <MiscMask>0xFFFFFFFF</MiscMask>
</EnclaveConfiguration>
tcs_num 10, tcs_max_num 10, tcs_min_pool 1
INFO: Enclave configuration 'MiscSelect' and 'MiscSelectMask' will prevent enclave from using dynamic features. To use the dynamic features on SGX2 platform, suggest to set MiscMask[0]=0 and MiscSelect[0]=1.
The required memory is 4169728B.
The required memory is 0x3fa000, 4072 KB.
handle_compatible_metadata: Overwrite with metadata version 0x100000004
Succeed.
SIGN =>  enclave.signed.so
The project has been built in debug hardware mode.
make[1]: 离开目录“/opt/intel/sgxsdk/SampleCode/SampleEnclave”
xu@ubuntu20:/opt/intel/sgxsdk/SampleCode/SampleEnclave$ ./app
Error: Unexpected error occurred.
Enter a character before exit ...

