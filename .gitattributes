要在 Ubuntu 上卸载已安装的 PostgreSQL 12 并安装 PostgreSQL 9.6，您可以按照以下步骤操作：

卸载 PostgreSQL 12
停止 PostgreSQL 服务：

bash
Copy code
sudo systemctl stop postgresql
卸载 PostgreSQL 12：

bash
Copy code
sudo apt-get --purge remove postgresql postgresql-server-dev-all
这将移除 PostgreSQL 12 和相关的开发文件。请注意，使用 --purge 参数会删除配置文件和数据目录。

清理系统：

bash
Copy code
sudo apt-get autoremove
这将删除所有不再需要的包。

可选：备份数据：
如果您有重要数据在 PostgreSQL 12 的数据库中，建议在卸载前进行备份。

安装 PostgreSQL 9.6
添加 PostgreSQL 9.6 的官方仓库：
PostgreSQL 9.6 可能不在 Ubuntu 的默认仓库中，因此您需要添加 PostgreSQL 的官方仓库。

添加 GPG 密钥：

bash
Copy code
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
添加仓库：

bash
Copy code
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
更新包列表：

bash
Copy code
sudo apt-get update
安装 PostgreSQL 9.6：

bash
Copy code
sudo apt-get install postgresql-9.6 postgresql-server-dev-9.6
这将安装 PostgreSQL 9.6 及其开发文件。

启动 PostgreSQL 服务：

bash
Copy code
sudo systemctl start postgresql
验证安装：
检查 PostgreSQL 9.6 是否正确安装：

bash
Copy code
psql --version
或者尝试连接到 PostgreSQL 数据库：

bash
Copy code
sudo -u postgres psql















# Auto detect text files and perform LF normalization
* text=auto
postgres=# CREATE EXTENSION encdb;
ERROR:  could not load library "/usr/lib/postgresql/12/lib/encdb.so": /usr/lib/postgresql/12/lib/encdb.so: undefined symbol: get_float4_infinity




xu@ubuntu20:/opt/intel/sgxsdk/SampleCode/SampleEnclave$ sudo make
[sudo] xu 的密码： 
对不起，请重试。
[sudo] xu 的密码： 
make[1]: 进入目录“/opt/intel/sgxsdk/SampleCode/SampleEnclave”
GEN  =>  App/Enclave_u.h
CC   <=  App/Enclave_u.c
CXX  <=  App/App.cpp
CXX  <=  App/Edger8rSyntax/Types.cpp
CXX  <=  App/Edger8rSyntax/Pointers.cpp
CXX  <=  App/Edger8rSyntax/Arrays.cpp
CXX  <=  App/Edger8rSyntax/Functions.cpp
CXX  <=  App/TrustedLibrary/Thread.cpp
CXX  <=  App/TrustedLibrary/Libcxx.cpp
CXX  <=  App/TrustedLibrary/Libc.cpp
LINK =>  app
GEN  =>  Enclave/Enclave_t.h
CC   <=  Enclave/Enclave_t.c
CXX  <=  Enclave/Edger8rSyntax/Arrays.cpp
CXX  <=  Enclave/Edger8rSyntax/Functions.cpp
CXX  <=  Enclave/Edger8rSyntax/Pointers.cpp
CXX  <=  Enclave/Edger8rSyntax/Types.cpp
CXX  <=  Enclave/Enclave.cpp
CXX  <=  Enclave/TrustedLibrary/Libc.cpp
In file included from /opt/intel/sgxsdk/include/libcxx/cwchar:110,
                 from /opt/intel/sgxsdk/include/libcxx/__string:60,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/libcxx/__support/sgx/support.h:6:8: warning: redundant redeclaration of ‘size_t mbsnrtowcs(wchar_t*, const char**, size_t, size_t, mbstate_t*)’ in same scope [-Wredundant-decls]
    6 | size_t mbsnrtowcs(wchar_t *dst, const char **src,
      |        ^~~~~~~~~~
In file included from /opt/intel/sgxsdk/include/libcxx/iosfwd:95,
                 from /opt/intel/sgxsdk/include/libcxx/__debug:17,
                 from /opt/intel/sgxsdk/include/libcxx/utility:206,
                 from /opt/intel/sgxsdk/include/libcxx/algorithm:652,
                 from /opt/intel/sgxsdk/include/libcxx/__string:57,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/tlibc/wchar.h:132:27: note: previous declaration of ‘size_t mbsnrtowcs(wchar_t*, const char**, size_t, size_t, mbstate_t*)’
  132 | size_t      _TLIBC_CDECL_ mbsnrtowcs(wchar_t *__restrict, const char **__restrict, size_t, size_t, mbstate_t *__restrict);
      |                           ^~~~~~~~~~
In file included from /opt/intel/sgxsdk/include/libcxx/cwchar:110,
                 from /opt/intel/sgxsdk/include/libcxx/__string:60,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/libcxx/__support/sgx/support.h:8:8: warning: redundant redeclaration of ‘size_t wcsnrtombs(char*, const wchar_t**, size_t, size_t, mbstate_t*)’ in same scope [-Wredundant-decls]
    8 | size_t wcsnrtombs(char *dst, const wchar_t **src,
      |        ^~~~~~~~~~
In file included from /opt/intel/sgxsdk/include/libcxx/iosfwd:95,
                 from /opt/intel/sgxsdk/include/libcxx/__debug:17,
                 from /opt/intel/sgxsdk/include/libcxx/utility:206,
                 from /opt/intel/sgxsdk/include/libcxx/algorithm:652,
                 from /opt/intel/sgxsdk/include/libcxx/__string:57,
                 from /opt/intel/sgxsdk/include/libcxx/string_view:179,
                 from /opt/intel/sgxsdk/include/libcxx/string:511,
                 from Enclave/TrustedLibrary/Libcxx.cpp:34:
/opt/intel/sgxsdk/include/tlibc/wchar.h:131:27: note: previous declaration of ‘size_t wcsnrtombs(char*, const wchar_t**, size_t, size_t, mbstate_t*)’
  131 | size_t      _TLIBC_CDECL_ wcsnrtombs(char *__restrict, const wchar_t **__restrict, size_t, size_t, mbstate_t *__restrict);
      |                           ^~~~~~~~~~
CXX  <=  Enclave/TrustedLibrary/Libcxx.cpp
CXX  <=  Enclave/TrustedLibrary/Thread.cpp
LINK =>  enclave.so
There is no enclave test key<Enclave_private_test.pem>.
The project will generate a key<Enclave_private_test.pem> for test.
Generating RSA private key, 3072 bit long modulus (2 primes)
..........++++
....................................................................................................................................................................++++
e is 3 (0x03)
<EnclaveConfiguration>
    <ProdID>0</ProdID>
    <ISVSVN>0</ISVSVN>
    <StackMaxSize>0x40000</StackMaxSize>
    <HeapMaxSize>0x100000</HeapMaxSize>
    <TCSNum>10</TCSNum>
    <TCSPolicy>1</TCSPolicy>
    <!-- Recommend changing 'DisableDebug' to 1 to make the enclave undebuggable for enclave release -->
    <DisableDebug>0</DisableDebug>
    <MiscSelect>0</MiscSelect>
    <MiscMask>0xFFFFFFFF</MiscMask>
</EnclaveConfiguration>
tcs_num 10, tcs_max_num 10, tcs_min_pool 1
INFO: Enclave configuration 'MiscSelect' and 'MiscSelectMask' will prevent enclave from using dynamic features. To use the dynamic features on SGX2 platform, suggest to set MiscMask[0]=0 and MiscSelect[0]=1.
The required memory is 4169728B.
The required memory is 0x3fa000, 4072 KB.
handle_compatible_metadata: Overwrite with metadata version 0x100000004
Succeed.
SIGN =>  enclave.signed.so
The project has been built in debug hardware mode.
make[1]: 离开目录“/opt/intel/sgxsdk/SampleCode/SampleEnclave”
xu@ubuntu20:/opt/intel/sgxsdk/SampleCode/SampleEnclave$ ./app
Error: Unexpected error occurred.
Enter a character before exit ...

